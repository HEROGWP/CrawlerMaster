= render partial: 'partials/navbar'

.container
  .row
    .col-lg-8.col-lg-offset-2.col-md-10.col-md-offset-1.col-s-12
      / flash messages
      = render partial: 'partials/flash_messages'

      .container
        .row
          h3
            = @crawler.name
          / Run button
          form action=run_crawler_path(@crawler.organization_code) method="post" style="display: inline-block;"
            = hidden_field_tag :authenticity_token, form_authenticity_token
            span
              button.btn.btn-primary style="margin: 0 1em;" type="submit" Run

          span
            a href=crawler_import_path(@crawler.organization_code)
              button.btn.btn-primary style="margin: 0 1em;" Import

          / Sync button
          form action=sync_crawler_path(@crawler.organization_code) method="post" style="display: inline-block;"
            = hidden_field_tag :authenticity_token, form_authenticity_token
            span
              button.btn.btn-success style="margin: 0 1em;" type="submit" Sync


      h4 Status
      table.table
        tr
          th Name
          td= @crawler.name
        tr
          th Description
          td= @crawler.description
        tr
          th Year/Term
          td= "#{@crawler.year} / #{@crawler.term}"
        tr
          th Resource Url
          - resource_url = courses_path(organization_code: @crawler.organization_code)
          td= link_to resource_url, resource_url
        tr
          th Resource Count
          td= @crawler.courses.size
        tr
          th Last Update at
          td= @crawler.last_run_at.nil? ? 'not available' : time_ago_in_words(@crawler.last_run_at)
        tr
          th Last Sync at
          td= @crawler.last_sync_at.nil? ? 'not available' : time_ago_in_words(@crawler.last_sync_at)
        tr
          th Queue size
          td= "#{CourseCrawler::Crawlers.find_queued_jobs(@crawler.name).count}"
        tr
          th Workers Overview
          td
            .table-responsive
              table.table.table-hover.table-bordered
                tr
                  th jid
                  th progress
                  th created_at
                  th failed_at
                - CourseCrawler::Crawlers.find_workers(@crawler.name).each do |process_id, thread_id, work|
                  tr
                    td= work["payload"]["jid"]
                    td= CourseCrawler::Crawlers.get_progress(@crawler.name, work["payload"]["jid"])
                    td= work["payload"]["created_at"] && time_ago_in_words(Time.at(work["payload"]["created_at"])) + " ago"
                    td= work["payload"]["failed_at"] && Time.at(work["payload"]["failed_at"])

      h4 Crawl Tasks
      .table-responsive
        table.table.table-hover
          tr
            th id
            th year
            th term
            th started at
            th finished at
            th

          - @crawler.crawl_tasks.order(created_at: :desc).each do |task|
            tr
              td= task.id
              td= task.course_year
              td= task.course_term
              td= task.created_at && "#{time_ago_in_words(task.created_at)} ago"
              td= task.finished_at && "#{time_ago_in_words(task.finished_at)} ago"
              td
                div= link_to "View Changes", task_changes_path(task_id: task.id)
                div= link_to "Download Snapshot[#{course_versions_count(task)}]", task_snapshot_path(task_id: task.id), method: :post
                div= link_to "Download Snapshot[#{error_course_versions_count(task)}](Potential Errors Only)", task_snapshot_path(task_id: task.id, errors_only: true), method: :post

      / Rufus Jobs Table
      h4 Rufus Jobs
      .table-responsive
        table.table.table-hover
          tr
            th id
            th jid
            th original
            th last_time
            th scheduled_at
            th action

          - @crawler.rufus_jobs.each do |rfj|
            tr
              td= rfj.id
              td= rfj.jid
              td= rfj.original
              td= rfj.last_time
              td= rfj.scheduled_at
              td
                = link_to 'Unschedule', unschedule_job_path(@crawler.organization_code, rfj.id), method: :delete, :class => 'btn btn-mini btn-danger'

      / Setting form
      .panel-group#crawler-statistic
        .panel.panel-default
          .panel-heading#workers-setting role="tab"
            h3.panel-title
              a role="button" data-toggle="collapse" data-parent="#crawler-statistic" href="#workers-collapse1" aria-expanded="true" aria-controls="workers-collapse1"
                i.fa.fa-angle-down
                |  Settings
          #workers-collapse1.panel-collapse.collapse role="tabpanel" aria-labelledby="workers-setting"
            .panel-body
              = render partial: 'partials/setting_form', locals: { crawler: @crawler }

      / Workers Table
      .panel-group#crawler-statistic
        .panel.panel-default
          .panel-heading#workers-heading role="tab"
            h3.panel-title
              a role="button" data-toggle="collapse" data-parent="#crawler-statistic" href="#workers-collapse2" aria-expanded="true" aria-controls="workers-collapse2"
                i.fa.fa-angle-down
                |  Workers Details
          #workers-collapse2.panel-collapse.collapse role="tabpanel" aria-labelledby="workers-heading"
            .panel-body
              .table-responsive
                table.table.table-hover
                  tr
                    th process_id
                    th thread_id
                    th queue
                    th jid
                    th created_at
                    th enqueued_at
                    th error_message
                    th error_class
                    th failed_at
                    th retry_count
                    th retried_at
                  - CourseCrawler::Crawlers.find_workers(@crawler.name).each do |process_id, thread_id, work|
                    tr
                      td= process_id
                      td= thread_id
                      td= work["queue"]
                      td= work["payload"]["jid"]
                      td= work["payload"]["created_at"] && Time.at(work["payload"]["created_at"])
                      td= work["payload"]["enqueued_at"] && Time.at(work["payload"]["enqueued_at"])
                      td= work["payload"]["error_message"]
                      td= work["payload"]["error_class"]
                      td= work["payload"]["failed_at"] && Time.at(work["payload"]["failed_at"])
                      td= work["payload"]["retry_count"]
                      td= work["payload"]["retried_at"] && Time.at(work["payload"]["retried_at"])
